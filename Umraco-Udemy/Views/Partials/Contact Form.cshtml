@* model is the contact form view model*@
@model Umbraco_Udemy.Core.ViewModel.ContactFormViewModel
@using Umbraco_Udemy.Core.Controllers
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}

@if ((string)TempData["status"] == "OK")
{
    @* show ok message *@
    <text>
        <div class="container">
            <div class="row">
                <div class="col text-center p-5">
                    <i class="far fa-5x fa-thumbs-up"></i>
                    <div>
                        Thanks for your comments.
                    </div>
                </div>
            </div>
        </div>
    </text>
}
else
{
    @*Use html helper tag for umbraco to render the form - pass in surface controller (contactController) & name of controller action (HandleContactForm) *@
    using (Html.BeginUmbracoForm<Umbraco_Udemy.Core.Controllers.ContactController>("HandleContactForm"))
    {
        @Html.ValidationSummary()
        @*Prevents people tampering with the page*@
        @Html.AntiForgeryToken()

        <div class="form-group">
            <label for="your-name-textbox">Your name *</label>
            <span class="field-validation-valid" data-valmsg-for="Name" data-valmsg-replace="true"></span>
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control form-control-lg", placeholder = "Your Name", maxlength = "80" })
        </div>

        <!-- Email -->
        <div class="form-group">
            <label for="your-email-textbox">Your name *</label>
            <span class="field-validation-valid" data-valmsg-for="Email" data-valmsg-replace="true"></span>
            @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control form-control-lg", placeholder = "Your email address", maxlength = "255" })
        </div>

        <!-- Subject -->
        <div class="form-group">
            <label for="your-subject-textbox">Subject of enquiry</label>
            <span class="field-validation-valid"></span>
            @Html.TextBoxFor(m => m.Subject, new { @class = "form-control form-control-lg", placeholder = "Subject of enquiry address", maxlength = "255" })
        </div>

        <!-- Comments -->
        <div class="form-group">
            <label for="your-comments-textbox">Comments</label>
            <span class="field-validation-valid"></span>
            @Html.TextAreaFor(m => m.Comment, new { @class = "form-control form-control-lg", placeholder = "Your comments", maxlength = "500" })
        </div>

        <!-- Put the rest of form elements -->
        <input type="hidden" name="GoogleCaptchaToken" id="GoogleCaptchaToken" />
        <div class="form-group">
            <button class="btn btn-outline-primary btn-lg" type="submit">Send</button>
        </div>

    }
}
